plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	/**
	 * spring-boot-starter(공통): 스프링 부트 + 스프링 코어 + 로깅
	 * - spring-boot
	 * -- spring-core
	 * - spring-boot-starter-logging
	 * -- logback
	 * -- slf4j
	 */

	/**
	 * spring-boot-starter-thymeleaf:
	 * 타임리프 템플릿 엔진(View)
	 */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	/**
	 * spring-boot-starter-web
	 * - spring-boot-starter-tomcat: 톰캣 (웹서버)
	 * - spring-webmvc: 스프링 웹 MVC
	 */
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/**
	 * spring-boot-starter-test
	 * - junit: 테스트 프레임워크
	 * - mockito: 목 라이브러리
	 * - assertj: 테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리
	 * - spring-test: 스프링 통합 테스트 지원
	 */
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	/**
	 * JPA는 기존의 반복 코드는 물론이고, 기본적인 SQL도 JPA가 직접 만들어서 실행
	 * JPA를 사용하면, SQL과 데이터 중심의 설계에서 객체 중심의 설계로 패러다임을 전환을 할 수 있음
	 * JPA를 사용하면 개발 생산성을 크게 높일 수 있음
	 */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	//implementation 'org.springframework.boot:spring-boot-starter-jdbc'
}

test {
	useJUnitPlatform()
}
